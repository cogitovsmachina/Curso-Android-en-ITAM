##SimpleService ---------

SimpleService.java
public class SimpleService extends Activity implements OnClickListener {
	  Button Start, Stop;

	  @Override
	  public void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	    setContentView(R.layout.main);

	    Start = (Button) findViewById(R.id.startbutton);
	    Stop = (Button) findViewById(R.id.stopbutton);

	    Start.setOnClickListener(this);
	    Stop.setOnClickListener(this);
	  }

	  public void onClick(View src) {
	    switch (src.getId()) {
	    case R.id.startbutton:
	    	Toast.makeText(getApplicationContext(), "Clicked: Starting service", Toast.LENGTH_SHORT).show();
	    	startService(new Intent(this, MyService.class));
	      break;
	    case R.id.stopbutton:
	    	Toast.makeText(getApplicationContext(), "Clicked: Stopping service", Toast.LENGTH_SHORT).show();
	      stopService(new Intent(this, MyService.class));
	      break;
	    }
	  }
	}   
	
	
MyService.java      

public class MyService extends Service {
	private static final String TAG = "MyService";
	MediaPlayer player;
	
	@Override
	public IBinder onBind(Intent intent) {
		return null;
	}
	
	@Override
	public void onCreate() {
		Toast.makeText(this, "My Service Created", Toast.LENGTH_LONG).show();
		Log.d(TAG, "onCreate");
		
		player = MediaPlayer.create(this, R.raw.nyan_cat);
		player.setLooping(true); // Set looping
	}

	@Override
	public void onDestroy() {
		Toast.makeText(this, "My Service Stopped", Toast.LENGTH_LONG).show();
		Log.d(TAG, "onDestroy");
		player.stop();
	}
	
	@Override
	public void onStart(Intent intent, int startid) {
		Toast.makeText(this, "My Service Started", Toast.LENGTH_LONG).show();
		Log.d(TAG, "onStart");
		player.start();
	}
}

XML


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout 
	xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:gravity="center">
	<TextView  
    	android:layout_width="fill_parent" 
    	android:layout_height="wrap_content" 
    	android:text="Services Demo" 
    	android:gravity="center" 
    	android:textSize="20sp" 
    	android:padding="20dp"
    	/>
	<Button 
		android:layout_width="wrap_content" 
		android:layout_height="wrap_content" 
		android:id="@+id/startbutton" 
		android:text="Start"
	/>
	<Button 
		android:layout_width="wrap_content"
		android:layout_height="wrap_content" 
		android:text="Stop" 
		android:id="@+id/stopbutton"/>
</LinearLayout>



End SimpleService------------          



------
SimpleDownloader

XML
<?xml version="1.0" encoding="utf-8"?>
<Button xmlns:android="http://schemas.android.com/apk/res/android"
	android:id="@+id/button"
	android:layout_width="fill_parent"
	android:layout_height="fill_parent"
	android:text="Do the Download"
	android:onClick="doTheDownload"
/>


                     

Downloader.java------

import android.app.Activity;
import android.app.IntentService;
import android.content.Intent;
import android.os.Bundle;
import android.os.Environment;
import android.os.Message;
import android.os.Messenger;
import android.util.Log;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import org.apache.http.client.ResponseHandler;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.BasicResponseHandler;
import org.apache.http.impl.client.DefaultHttpClient;

public class Downloader extends IntentService {
public static final String EXTRA_MESSENGER="org.androidtitlan.itam.simpledownload.EXTRA_MESSENGER";
private HttpClient client=null;

public Downloader() {
	super("Downloader");
}

@Override
public void onCreate() {
	super.onCreate();
	client=new DefaultHttpClient();
}

@Override
public void onDestroy() {
	super.onDestroy();
	client.getConnectionManager().shutdown();
}

@Override	
public void onHandleIntent(Intent i) {
	HttpGet getMethod=new HttpGet(i.getData().toString());
	int result=Activity.RESULT_CANCELED;
	
	try {
		ResponseHandler<byte[]> responseHandler=new ByteArrayResponseHandler();
		byte[] responseBody=client.execute(getMethod, responseHandler);
		File output=new File(Environment.getExternalStorageDirectory(),
												i.getData().getLastPathSegment());
		
		if (output.exists()) {
			output.delete();
		}
		
		FileOutputStream fos=new FileOutputStream(output.getPath());
		
		fos.write(responseBody);
		fos.close();
		result=Activity.RESULT_OK;
	}
	catch (IOException e2) {
		Log.e(getClass().getName(), "Exception in download", e2);
	}
	
	Bundle extras=i.getExtras();

	if (extras!=null) {
		Messenger messenger=(Messenger)extras.get(EXTRA_MESSENGER);
		Message msg=Message.obtain();
		
		msg.arg1=result;
		
		try {
			messenger.send(msg);
		}
		catch (android.os.RemoteException e1) {
			Log.w(getClass().getName(), "Exception sending message", e1);
		}
	}
}
}